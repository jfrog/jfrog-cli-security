name: "Install and Setup Dependencies"
description: "Install needed dependencies for this repository like Go, Node, Java, Python, etc."

inputs:
  install-swift:
    description: "Set to 'true' to install Swift. warning: the install-swift actions are flaky and may fail on some platforms."
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24.x

    - name: install ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.0

    - name: Install cocoapods
      shell: ${{ runner.os == 'Windows' && 'powershell' || 'bash' }}
      run: gem install cocoapods

    - name: Install npm
      uses: actions/setup-node@v4
      with:
        node-version: "16"

    - name: Setup Pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8

    - name: Install Java
      uses: actions/setup-java@v4
      with:
        java-version: "11"
        distribution: "adopt"

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 7.6

    - name: Install NuGet
      uses: nuget/setup-nuget@v2
      with:
        nuget-version: 6.11.0

    - name: Install dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.x'

    - name: Install Mono on macOS (v2024-01-04-DEBUG)
      if: runner.os == 'macOS'
      run: |
        echo "🚀 STARTING MONO INSTALL WITH DEBUG - VERSION 2024-01-04"
        brew install mono
        echo "🔍 DEBUG: Comprehensive MSBuild hunt after Mono install..."
        echo "Checking common locations:"
        ls -la /opt/homebrew/bin/msbuild* 2>/dev/null || echo "❌ No msbuild in /opt/homebrew/bin/"
        ls -la /usr/local/bin/msbuild* 2>/dev/null || echo "❌ No msbuild in /usr/local/bin/"
        ls -la /Library/Frameworks/Mono.framework/Versions/Current/Commands/msbuild* 2>/dev/null || echo "❌ No msbuild in Mono.framework"
        
        echo "🕵️ DEBUG: Searching for ANY msbuild on the system..."
        find /opt/homebrew -name "*msbuild*" 2>/dev/null | head -10 || echo "No msbuild found in /opt/homebrew"
        find /Library/Frameworks/Mono.framework -name "*msbuild*" 2>/dev/null | head -10 || echo "No msbuild found in Mono.framework"
        
        echo "🛤️ DEBUG: Checking what's in PATH that could be msbuild..."
        which msbuild 2>/dev/null || echo "❌ No msbuild found in PATH"
        
        echo "📦 DEBUG: Moving any found msbuild to backup..."
        sudo mv /opt/homebrew/bin/msbuild /opt/homebrew/bin/msbuild.mono.bak 2>/dev/null || echo "No msbuild to move in /opt/homebrew/bin/"
        
        echo "🛤️ DEBUG: Setting PATH to prioritize dotnet..."
        echo "PATH=/usr/local/share/dotnet:$PATH" >> $GITHUB_ENV
        echo "✅ DEBUG: PATH updated to prioritize dotnet tools!"
      shell: bash

    - name: Install Mono on Linux
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https dirmngr gnupg ca-certificates
        sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
        echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
        sudo apt-get update
        sudo apt-get install -y mono-complete
      shell: bash

    - name: Setup Python3
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Setup Pipenv
      run: python -m pip install pipenv
      shell: ${{ runner.os == 'Windows' && 'powershell' || 'bash' }}

    - name: Setup Poetry
      run: python -m pip install poetry
      shell: ${{ runner.os == 'Windows' && 'powershell' || 'bash' }}

    - name: Setup Conan
      run: |
        python -m pip install conan
        conan profile detect
      shell: ${{ runner.os == 'Windows' && 'powershell' || 'bash' }}

    - name: Install Swift on Linux and macOS
      uses: SwiftyLab/setup-swift@latest
      if: ${{ inputs.install-swift == 'true' && (runner.os == 'Linux' || runner.os == 'macOS') }}

    - name: Install Swift on Windows
      uses: compnerd/gha-setup-swift@v0.3.0
      with:
        branch: swift-6.1-release
        tag: 6.1-RELEASE
      if: ${{ inputs.install-swift == 'true' && runner.os == 'Windows' }}
